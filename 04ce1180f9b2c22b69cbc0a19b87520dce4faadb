{
  "comments": [
    {
      "key": {
        "uuid": "ffb9cba7_fbc58d5c",
        "filename": "lib/util.c",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 2936
      },
      "writtenOn": "2016-02-13T05:14:52Z",
      "side": 1,
      "message": "Maybe snprintf so you can\u0027t run past tmp regardless?",
      "revId": "04ce1180f9b2c22b69cbc0a19b87520dce4faadb",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffb9cba7_db20c9fa",
        "filename": "lib/util.c",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 5503
      },
      "writtenOn": "2016-02-13T05:36:44Z",
      "side": 1,
      "message": "Generally snprintf is safer, but in this case I\u0027m not sure.  The sizing of the tmp buffer is relative to the size of the datatype being printed.  This is the same code as toybox uses, so I trust it\u0027s sane.  I guess the only unexplored corner case might be seeing how negative octal values might be printed...",
      "parentUuid": "ffb9cba7_fbc58d5c",
      "revId": "04ce1180f9b2c22b69cbc0a19b87520dce4faadb",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffb9cba7_1b6c2135",
        "filename": "lib/util.c",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 2936
      },
      "writtenOn": "2016-02-13T05:38:30Z",
      "side": 1,
      "message": "I wondered what would happen if you gave negative octal values when I was looking at the previous patchset last night too.",
      "parentUuid": "ffb9cba7_db20c9fa",
      "revId": "04ce1180f9b2c22b69cbc0a19b87520dce4faadb",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffb9cba7_3bd7a5c2",
        "filename": "lib/util.c",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 5503
      },
      "writtenOn": "2016-02-13T05:48:12Z",
      "side": 1,
      "message": "Actually the size of tmp seems to be just a bit overly conservative.  The actual needed size, assuming a leading negative sign, is 1 + ROUNDUP(8*sizeof(int64_t)/3, 3) + 1 or 24.  This code, as written, will alloc 25 bytes.  The discrepancy between the needed and allocated sizes would continue to increase as the data size got larger... eg. int128_t would alloc 49 bytes but only need 44 bytes.",
      "parentUuid": "ffb9cba7_db20c9fa",
      "revId": "04ce1180f9b2c22b69cbc0a19b87520dce4faadb",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffb9cba7_7bee7d89",
        "filename": "lib/util.c",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 5503
      },
      "writtenOn": "2016-02-13T05:49:38Z",
      "side": 1,
      "message": "Obviously size \"can\u0027t\" be negative.  But mtime may, I think.  So I should definitely investigate that and compare against other tar implementations.",
      "parentUuid": "ffb9cba7_1b6c2135",
      "revId": "04ce1180f9b2c22b69cbc0a19b87520dce4faadb",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffb9cba7_3fe6aa18",
        "filename": "lib/util.c",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 5503
      },
      "writtenOn": "2016-02-16T08:05:19Z",
      "side": 1,
      "message": "Okay so size and mtime are both 12 byte fields.  GNU tar sign extends negative values so that eg. when mtime is -1, the field is filled with 0xff values.  The code as written here doesn\u0027t touch the bits between 64 and 95.  So I guess I\u0027ll need to add code to sign extend to arbitrary sizes.",
      "parentUuid": "ffb9cba7_7bee7d89",
      "revId": "04ce1180f9b2c22b69cbc0a19b87520dce4faadb",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    }
  ]
}